{"version":3,"sources":["components/Form.js","components/Footer.js","components/Header.js","components/Tutorials.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","useState","title","setTitle","content","setContent","count","setCount","className","id","onSubmit","event","preventDefault","e","document","getElementById","reset","required","placeholder","type","onChange","target","value","rows","Footer","Header","Tutorials","edit","setEdit","published","setPublished","search","setSearch","length","setLength","more","setMore","useEffect","postData","a","axios","get","data","editArray","publishArray","tutorial","push","editList","splice","publishedList","fetchDataEdit","makePublished","alert","put","x","makeDeleted","delete","post","then","response","makeUpdated","deleteAll","array","publishedArray","map","key","style","marginTop","date","Number","substr","background","position","marginLeft","top","onClick","eTitle","eContent","defaultValue","fontSize","textAlign","overflow","dataLength","next","setTimeout","hasMore","loader","color","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3b642b57.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Form(props) {\r\nconst [title, setTitle] = useState('')\r\nconst [content, setContent] = useState('')\r\nconst [count, setCount] = useState(1)\r\n\r\nconst handleTitle = (event) => {\r\n   setTitle(event.target.value)\r\n  }\r\n\r\n  const handleContent = (event) => {\r\n   setContent(event.target.value)\r\n  }\r\n\r\nconst addTutorial = (event) => {\r\nevent.preventDefault();\r\nsetCount(e => e + 1)\r\nprops.title(title)\r\nprops.content(content)\r\nprops.count(count)\r\ndocument.getElementById(\"tutorialForm\").reset();\r\n}\r\n\r\nreturn (\r\n<div>\r\n <h1 className=\"head\">Tutorials.</h1>\r\n <form id=\"tutorialForm\" className=\"form\" onSubmit={addTutorial}>\r\n    <textarea required placeholder=\"Add title for your tutorial...\" className=\"titleInput\" type=\"text\" id=\"tutorialTitle\" onChange={handleTitle}/> <br/><br/>\r\n    <textarea required rows=\"8\" placeholder=\"Add content for your tutorial...\" className=\"contentInput\" type=\"text\" id=\"tutorialContent\" onChange={handleContent}/><br/><br/>\r\n    <input className=\"submit\" type='submit' id=\"addButton\"/>\r\n    </form>\r\n</div>\r\n);\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n\r\n\r\nreturn (\r\n    <div className=\"footer\"> </div>\r\n);\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction Header(props) {\r\n\r\n\r\nreturn (\r\n    <div className=\"header\"> </div>\r\n);\r\n}\r\n\r\nexport default Header;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nfunction Tutorials(props) {\r\nconst [edit, setEdit] = useState([])\r\nconst [published, setPublished] = useState([])\r\nconst [count, setCount] = useState(0)\r\nconst [search, setSearch] = useState('')\r\nconst [length, setLength] = useState(5)\r\nconst [more, setMore] = useState(true)\r\n\r\nuseEffect(() =>{\r\npostData();\r\n},[props.count]);\r\n\r\n\r\n    useEffect(() => {\r\n    const fetchDataEdit = async () => {\r\n    const { data } = await axios.get(`/api/tutorials/?title=${search}`)\r\n    let editArray = []\r\n    let publishArray = []\r\n    for (const tutorial of data){\r\n    if(!tutorial.published){\r\n    editArray.push(tutorial)\r\n    } else {\r\n    publishArray.push(tutorial)\r\n    }}\r\nif(length > editArray.length && length > publishArray.length){\r\nsetMore(false)\r\n} else {\r\nsetMore(true)\r\n}\r\n     editList(editArray.splice(0, length))\r\n     publishedList(publishArray.splice(0, length))\r\n    }; fetchDataEdit();\r\n  },[count, search, length]);\r\n\r\n\r\n\r\n    const makePublished = async (e, title, content) => {\r\n    if(title === '' || content === ''){\r\n    alert('Either title or content of the submitted tutorial is missing!')\r\n    return;\r\n    } else {\r\n    await axios.put(`/api/tutorials/${e}/publish`, {\r\n    title: title,\r\n    content: content,\r\n    });\r\n  }\r\n    setCount((x) => x + 1);\r\n  };\r\n\r\n  const makeDeleted = async (e) => {\r\n  await axios.delete(`/api/tutorials/${e}`)\r\n  setCount((x) => x + 1);\r\n  }\r\n\r\nconst postData = async () => {\r\n    if(props.count > 0){\r\n    try{\r\n    await axios.post(`/api/tutorials/`, {\r\n    title: props.title,\r\n    content: props.content,\r\n  })\r\n  .then(function (response) {\r\n  setCount((x) => x + 1);\r\n  })\r\n}catch(error){\r\n alert(error)\r\n}}\r\n}\r\n\r\n  const makeUpdated = async (id, title, content) => {\r\nawait axios.put(`/api/tutorials/${id}`, {\r\ntitle: title,\r\ncontent: content,\r\n})\r\n  setCount((x) => x + 1);\r\n  }\r\n\r\nconst deleteAll = async () =>{\r\nawait axios.delete(`/api/tutorials`)\r\nsetCount((x) => x + 1);\r\n}\r\n\r\nconst publishedList = (array) => {\r\n    const publishedArray = array.map((e) => {\r\n      return (\r\n        <div className=\"tutorialPublished\" key={e.id}>\r\n          <h4 className=\"title\">{e.title}</h4>\r\n          <p className=\"content\">{e.content}</p>\r\n        <p style={{marginTop:\"160px\"}}>\r\n            {e.date}\r\n            {Number(e.date.substr(11, 2)) > 11 ? ' PM' : ' AM'}\r\n             <button\r\n             style={{background:\"rgb(214, 214, 214)\",position:\"relative\", marginLeft:\"800px\", top:\"-16px\"}}\r\n             className=\"fa fa-trash-o deleteButton\"\r\n             onClick={() => makeDeleted(e.id)}>\r\n             </button>\r\n          </p>\r\n        </div>\r\n      )\r\n    })\r\nsetPublished(publishedArray);\r\n}\r\n\r\nconst editList = (array) => {\r\nconst editArray = array.map((e) => {\r\nvar eTitle = e.title;\r\nvar eContent = e.content;\r\n\r\nfunction editTitle(event){\r\neTitle = event.target.value;\r\n}\r\n\r\n function editContent(event){\r\neContent = event.target.value;\r\n}\r\n\r\n     return (\r\n        <div className=\"tutorialEdit\" key={e.id}>\r\n          <textarea required className=\"eTitle\" defaultValue={eTitle} onChange={editTitle}/>\r\n          <p className=\"titleEdit\">&#9998;</p>\r\n          <textarea required rows=\"4\" className=\"eContent\" defaultValue={eContent} onChange={editContent}/>\r\n          <p className=\"contentEdit\">&#9998;</p>     \r\n        <p style={{marginTop:'-35px'}}>\r\n            {e.date}\r\n            {Number(e.date.substr(11, 2)) > 11 ? ' PM' : ' AM'}\r\n            <button className=\"fa fa-trash-o deleteButton\" onClick={() => makeDeleted(e.id)}></button>\r\n            <button className=\"saveButton fa fa-save\" onClick={() => makeUpdated(e.id, eTitle, eContent)}></button>\r\n          </p>\r\n          <button className=\"publishButton\" onClick={() => makePublished(e.id, eTitle, eContent)}>Publish</button>\r\n        </div>\r\n      );\r\n    })\r\n      setEdit(editArray)\r\n  }\r\n\r\n  const fetchMoreData = () => {\r\n setTimeout(() => {\r\n    setLength(e => e + 3)\r\n }, 1500);\r\n  };\r\n\r\n    return(\r\n<div>\r\n<input className=\"filterList\" placeholder=\"Search...\" onChange={(event) => setSearch(event.target.value)}/>\r\n<div className=\"flex-container\">\r\n<div className=\"edit\">\r\n<p style={{fontSize:\"25px\", textAlign:\"center\"}}>Edit Manager</p>\r\n{edit}\r\n</div>\r\n<p className=\"blank\"></p>\r\n<div className=\"published\">\r\n<p style={{fontSize:\"25px\", textAlign:\"center\"}}>Published Tutorials:</p>  \r\n{published}</div>\r\n</div>\r\n<button onClick={() => deleteAll()}className=\"deleteAll\">Delete all tutorials</button>\r\n        <InfiniteScroll\r\n          style={{overflow:'hidden'}}\r\n          dataLength={length}\r\n          next={fetchMoreData}\r\n          hasMore={more}\r\n          loader={<p style={{fontSize:\"32px\", color:\"grey\", textAlign:\"center\"}} >Loading . . .</p>}>\r\n        </InfiniteScroll>\r\n</div>\r\n    );\r\n}\r\n\r\nexport default Tutorials;","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Form from './components/Form.js'\r\nimport Footer from './components/Footer'\r\nimport Header from './components/Header'\r\nimport Tutorials from './components/Tutorials.js'\r\n\r\nfunction App() {\r\nconst [title, setTitle] = useState('')\r\nconst [content, setContent] = useState('')\r\nconst [count, setCount] = useState(0)\r\n\r\n  return (\r\n<div>\r\n<Header/>\r\n<Form count={(e) => setCount(e)} title={(e) => setTitle(e)} content={(e) => setContent(e)}/>\r\n<Tutorials count={count} title={title} content={content}/>\r\n<Footer/>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}