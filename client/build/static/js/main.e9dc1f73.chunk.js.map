{"version":3,"sources":["components/Form.js","components/Footer.js","components/Header.js","components/Tutorials.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","useState","title","setTitle","content","setContent","count","setCount","className","id","onSubmit","event","preventDefault","e","document","getElementById","reset","required","placeholder","type","onChange","target","value","rows","Footer","Header","Tutorials","edit","setEdit","published","setPublished","search","setSearch","length","setLength","more","setMore","useEffect","a","axios","get","data","editArray","filter","publishArray","sortedEdit","sort","b","date","replace","sortedPublished","editList","splice","publishedList","fetchDataEdit","makePublished","alert","put","x","makeDeleted","delete","postData","post","then","makeUpdated","deleteAll","array","publishedArray","map","key","style","marginBottom","Number","substr","background","marginLeft","marginTop","onClick","eTitle","eContent","defaultValue","color","fontSize","textAlign","overflow","dataLength","next","setTimeout","hasMore","loader","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e9dc1f73.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Form(props) {\r\nconst [title, setTitle] = useState('')\r\nconst [content, setContent] = useState('')\r\nconst [count, setCount] = useState(1)\r\n\r\nconst handleTitle = (event) => {\r\n   setTitle(event.target.value)\r\n  }\r\n\r\n  const handleContent = (event) => {\r\n   setContent(event.target.value)\r\n  }\r\n\r\nconst addTutorial = (event) => {\r\nevent.preventDefault();\r\nsetCount(e => e + 1)\r\nprops.title(title)\r\nprops.content(content)\r\nprops.count(count)\r\ndocument.getElementById(\"tutorialForm\").reset();\r\n}\r\n\r\nreturn (\r\n<div>\r\n <h1 className=\"head\">Tutorials.</h1>\r\n <form id=\"tutorialForm\" className=\"form\" onSubmit={addTutorial}>\r\n    <textarea required placeholder=\"Add title for your tutorial...\" className=\"titleInput\" type=\"text\" id=\"tutorialTitle\" onChange={handleTitle}/> <br/><br/>\r\n    <textarea required rows=\"8\" placeholder=\"Add content for your tutorial...\" className=\"contentInput\" type=\"text\" id=\"tutorialContent\" onChange={handleContent}/><br/><br/>\r\n    <input className=\"submit\" type='submit' id=\"addButton\"/>\r\n    </form>\r\n</div>\r\n);\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n\r\n\r\nreturn (\r\n    <div className=\"footer\"> </div>\r\n);\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction Header(props) {\r\n\r\n\r\nreturn (\r\n    <div className=\"header\"> </div>\r\n);\r\n}\r\n\r\nexport default Header;","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable jsx-a11y/control-has-associated-label */\r\n/* eslint-disable no-use-before-define */\r\n/* eslint-disable no-alert */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nfunction Tutorials(props) {\r\n  const [edit, setEdit] = useState([]);\r\n  const [published, setPublished] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [search, setSearch] = useState('');\r\n  const [length, setLength] = useState(5);\r\n  const [more, setMore] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchDataEdit = async () => {\r\n      const { data } = await axios.get(`/api/tutorials/?title=${search}`);\r\n\r\n      const editArray = data.filter((e) => !e.published);\r\n      const publishArray = data.filter((e) => e.published);\r\n\r\n      const sortedEdit = editArray.sort((a, b) => b.date.replace(/ /g, '').replace(/,/g, '').replace(/:/g, '').replace(/-/g, '')\r\n    - a.date.replace(/ /g, '').replace(/,/g, '').replace(/:/g, '').replace(/-/g, ''));\r\n      const sortedPublished = publishArray.sort((a, b) => b.date.replace(/ /g, '').replace(/,/g, '').replace(/:/g, '').replace(/-/g, '')\r\n    - a.date.replace(/ /g, '').replace(/,/g, '').replace(/:/g, '').replace(/-/g, ''));\r\n\r\n      if (length > editArray.length && length > publishArray.length) {\r\n        setMore(false);\r\n      } else {\r\n        setMore(true);\r\n      }\r\n      editList(sortedEdit.splice(0, length));\r\n      publishedList(sortedPublished.splice(0, length));\r\n    }; fetchDataEdit();\r\n  }, [count, search, length]);\r\n\r\n  const makePublished = async (e, title, content) => {\r\n    if (title === '' || content === '') {\r\n      alert('Either title or content of the submitted tutorial is missing!');\r\n      return;\r\n    }\r\n    await axios.put(`/api/tutorials/${e}/publish`, {\r\n      title,\r\n      content,\r\n    });\r\n\r\n    setCount((x) => x + 1);\r\n  };\r\n\r\n  const makeDeleted = async (e) => {\r\n    await axios.delete(`/api/tutorials/${e}`);\r\n    setCount((x) => x + 1);\r\n  };\r\n\r\n  const postData = async () => {\r\n    if (props.count > 0) {\r\n      try {\r\n        await axios.post('/api/tutorials/', {\r\n          title: props.title,\r\n          content: props.content,\r\n        })\r\n          .then(() => {\r\n            setCount((x) => x + 1);\r\n          });\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    postData();\r\n  }, [props.count]);\r\n\r\n  const makeUpdated = async (id, title, content) => {\r\n    await axios.put(`/api/tutorials/${id}`, {\r\n      title,\r\n      content,\r\n    });\r\n    setCount((x) => x + 1);\r\n  };\r\n\r\n  const deleteAll = async () => {\r\n    await axios.delete('/api/tutorials');\r\n    setCount((x) => x + 1);\r\n  };\r\n\r\n  const publishedList = (array) => {\r\n    const publishedArray = array.map((e) => (\r\n      <div className=\"tutorialPublished\" key={e.id}>\r\n        <p className=\"title\">{e.title}</p>\r\n        <p className=\"content\">{e.content}</p>\r\n        <p style={{ marginBottom: '-30px' }}>\r\n          {e.date}\r\n          {Number(e.date.substr(11, 2)) > 11 ? ' PM' : ' AM'}\r\n        </p>\r\n        <button\r\n          style={{\r\n            background: 'rgb(214, 214, 214)', marginLeft: '800px', marginTop: '8px', marginBottom: '6px',\r\n          }}\r\n          className=\"fa fa-trash-o deleteButton\"\r\n          onClick={() => makeDeleted(e.id)}\r\n        />\r\n      </div>\r\n    ));\r\n    setPublished(publishedArray);\r\n  };\r\n\r\n  const editList = (array) => {\r\n    const editArray = array.map((e) => {\r\n      let eTitle = e.title;\r\n      let eContent = e.content;\r\n\r\n      function editTitle(event) {\r\n        eTitle = event.target.value;\r\n      }\r\n\r\n      function editContent(event) {\r\n        eContent = event.target.value;\r\n      }\r\n\r\n      return (\r\n        <div className=\"tutorialEdit\" key={e.id}>\r\n          <textarea required className=\"eTitle\" defaultValue={eTitle} onChange={editTitle} />\r\n          <p className=\"titleEdit\">&#9998;</p>\r\n          <textarea required rows=\"4\" className=\"eContent\" defaultValue={eContent} onChange={editContent} />\r\n          <p className=\"contentEdit\">&#9998;</p>\r\n          <p style={{ marginTop: '-35px' }}>\r\n            {e.date}\r\n            {Number(e.date.substr(11, 2)) > 11 ? ' PM' : ' AM'}\r\n            <button className=\"fa fa-trash-o deleteButton\" onClick={() => makeDeleted(e.id)} />\r\n            <button className=\"saveButton fa fa-save\" onClick={() => makeUpdated(e.id, eTitle, eContent)} />\r\n          </p>\r\n          <button className=\"publishButton\" onClick={() => makePublished(e.id, eTitle, eContent)}>Publish</button>\r\n        </div>\r\n      );\r\n    });\r\n    setEdit(editArray);\r\n  };\r\n\r\n  const fetchMoreData = () => {\r\n    setTimeout(() => {\r\n      setLength((e) => e + 3);\r\n    }, 1500);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input className=\"filterList\" placeholder=\"Search...\" onChange={(event) => setSearch(event.target.value)} />\r\n      <div className=\"flex-container\">\r\n        <div className=\"edit\">\r\n          <p style={{ color: 'white', fontSize: '25px', textAlign: 'center' }}>Edit Manager</p>\r\n          {edit}\r\n        </div>\r\n        <p className=\"blank\" />\r\n        <div className=\"published\">\r\n          <p style={{ fontSize: '25px', textAlign: 'center' }}>Published Tutorials:</p>\r\n          {published}\r\n        </div>\r\n      </div>\r\n      <button onClick={() => deleteAll()} className=\"deleteAll\">Delete all tutorials</button>\r\n      <InfiniteScroll\r\n        style={{ overflow: 'hidden' }}\r\n        dataLength={length}\r\n        next={fetchMoreData}\r\n        hasMore={more}\r\n        loader={<p style={{ fontSize: '32px', color: 'grey', textAlign: 'center' }}>Loading . . .</p>}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tutorials;\r\n","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport Form from './components/Form.js'\r\nimport Footer from './components/Footer'\r\nimport Header from './components/Header'\r\nimport Tutorials from './components/Tutorials.js'\r\n\r\nfunction App() {\r\nconst [title, setTitle] = useState('')\r\nconst [content, setContent] = useState('')\r\nconst [count, setCount] = useState(0)\r\n\r\n  return (\r\n<div>\r\n<Header/>\r\n<Form count={(e) => setCount(e)} title={(e) => setTitle(e)} content={(e) => setContent(e)}/>\r\n<Tutorials count={count} title={title} content={content}/>\r\n<Footer/>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}